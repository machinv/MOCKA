(*!m2pim+mocka*)

(* ------------------------------------------------------------------------ *
 * MOCKA Modula-2 Compiler System, Version 1807                             *
 *                                                                          *
 * Copyright (C) 1988-2000 by                                               *
 *  GMD Gesellschaft fuer Mathematik und Datenverarbeitung,                 *
 *  Ehemalige GMD Forschungsstelle an der Uni Karlsruhe;                    *
 *  [EN] German National Research Center for Computer Science,              *
 *  Former GMD Research Lab at the University of Karlsruhe.                 *
 *                                                                          *
 * Copyright (C) 2001-2018 by                                               *
 *  Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung;       *
 *  [EN] Fraunhofer Society for the Advancement of Applied Research.        *
 * ------------------------------------------------------------------------ *)

DEFINITION MODULE CgBase;

FROM SYSTEM IMPORT
   ADDRESS;


TYPE SysProc =
  ( SysProcHALT,
    SysProcNewprocess,
    SysProcTransfer,
    SysProcCaseError,
    SysProcReturnError );


TYPE Mode =
  ( UnsignedByte,
    UnsignedWord,
    UnsignedLong,
    SignedByte,
    SignedWord,
    SignedLong,
    FloatShort,
    FloatLong,
    None );


TYPE Relation = 
  ( RelEqual,
    RelUnequal,
    RelLess,
    RelLessOrEqual,
    RelGreater,
    RelGreaterOrEqual );


TYPE RelSymb = POINTER TO ARRAY [0..255] OF CHAR;


TYPE Tempo = LONGINT;

TYPE DataTempo = (* ALIAS OF *) Tempo;

TYPE AddressTempo = (* ALIAS OF *) Tempo;


TYPE Label = RelSymb;


TYPE ModuleIndex = POINTER TO RECORD
  Name,
  Statics : RelSymb;
  Extern  : BOOLEAN;
END; (* ModuleIndex *)


TYPE ProcIndex = POINTER TO ProcRecord;

TYPE ProcRecord = RECORD
  Extern,
  IsFunction : BOOLEAN;
  Name,
  Entry      : RelSymb;
  Number     : SHORTCARD;
  Module     : ModuleIndex;
  Level      : SHORTCARD;
  Father     : ProcIndex;
END; (* ProcRecord *)


TYPE StringIndex = RelSymb;


TYPE LabelList = POINTER TO LabelListRecord;
  
TYPE LabelListRecord = RECORD
  label : Label;
  next  : LabelList;
END; (* LabelListRecord *)


VAR NullSymb : RelSymb;


VAR ElfOption : CARDINAL;


PROCEDURE MakeRelSymb ( VAR s : ARRAY OF CHAR ) : RelSymb;


PROCEDURE GetLabel ( VAR lab : Label );


PROCEDURE NewSymb () : RelSymb;


PROCEDURE InitCgBase;


END CgBase.
